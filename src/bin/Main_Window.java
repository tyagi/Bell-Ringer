package bin;


                    //import the sun.audio package
import java.awt.Toolkit;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Umesh Tyagi
 */
public class Main_Window extends javax.swing.JFrame {
    
    JFrame Main_Window = new JFrame();
    static Tray_Icon ti =  new Tray_Icon();
    DefaultTableModel m = new DefaultTableModel();
    public void tablechanged()
    {
        try
        {
            String datafile = "BellTime.file";
            FileReader fin = new FileReader(datafile);
             m= Data.createTableModel(fin,
                    new Vector<Object>(Arrays.asList(
                            new String[] { "Start Time", "Duration", "Sound File" })));
             
        }
        catch(Exception e)
        {
            int userInput = JOptionPane.showConfirmDialog(null,"Database Not Found \nDo You Want to Create it.");
            if(userInput==JOptionPane.YES_OPTION)
            {
                FileWriter fout = null;
                try {
                        String datafile = "BellTime.file";
                        fout = new FileWriter(datafile);
                        fout.close();
                        JOptionPane.showMessageDialog(null,"Database Successfully created. \nPlease Restart the Application");
                        System.exit(0);
                    } 
                    catch (IOException ex) 
                    {
                        JOptionPane.showMessageDialog(null,"Database Cannot be created. \nPlease Contact Administrator");
                    }
            }
        }
    }
    
    /**
     * Creates new form Main_Window
     */
    public Main_Window() throws Exception {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ToolsPanel = new javax.swing.JPanel();
        ScheduleBell = new javax.swing.JButton();
        FireAlarm = new javax.swing.JButton();
        EmergencyAlarm = new javax.swing.JButton();
        Anouncements = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        ProgressBar = new javax.swing.JProgressBar();
        bellTimingLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TimeTable = new javax.swing.JTable();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        closeBellRinger = new javax.swing.JMenuItem();
        ExitMenuItem = new javax.swing.JMenuItem();
        ToolsMenu = new javax.swing.JMenu();
        ShowInToolbarSubMenu = new javax.swing.JMenu();
        ShowScheduleBell = new javax.swing.JMenuItem();
        ShowFireAlarm = new javax.swing.JMenuItem();
        ShowEmergencyAlarm = new javax.swing.JMenuItem();
        ShowAnouncements = new javax.swing.JMenuItem();
        ScheduleBellMenuIteml = new javax.swing.JMenuItem();
        FireAlarmMenuItem = new javax.swing.JMenuItem();
        EmergencyAlarmMenuItem = new javax.swing.JMenuItem();
        AnouncementsMenuItem = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Bell Ringer");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("Resources/Icons/bell.png")));
        setIconImages(null);
        setLocationByPlatform(true);
        setName("mainframe");
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        ScheduleBell.setText("Schedule Bell");
        ScheduleBell.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ScheduleBell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleBellActionPerformed(evt);
            }
        });

        FireAlarm.setText("Fire Alarm");
        FireAlarm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FireAlarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireAlarmActionPerformed(evt);
            }
        });

        EmergencyAlarm.setText("Emergency Alarm");
        EmergencyAlarm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmergencyAlarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmergencyAlarmActionPerformed(evt);
            }
        });

        Anouncements.setText("Anouncements");
        Anouncements.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ToolsPanelLayout = new javax.swing.GroupLayout(ToolsPanel);
        ToolsPanel.setLayout(ToolsPanelLayout);
        ToolsPanelLayout.setHorizontalGroup(
            ToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScheduleBell, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FireAlarm, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EmergencyAlarm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Anouncements, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ToolsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Anouncements, EmergencyAlarm, FireAlarm, ScheduleBell, exit, stop});

        ToolsPanelLayout.setVerticalGroup(
            ToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScheduleBell)
                    .addComponent(FireAlarm)
                    .addComponent(EmergencyAlarm)
                    .addComponent(Anouncements)
                    .addComponent(stop)
                    .addComponent(exit))
                .addContainerGap())
        );

        ToolsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Anouncements, EmergencyAlarm, FireAlarm, ScheduleBell, exit, stop});

        bellTimingLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bellTimingLabel.setText("Bell Timings");

        tablechanged();
        TimeTable.setModel(m);
        TimeTable.getTableHeader().setReorderingAllowed(false);
        TimeTable.getColumn("Start Time").setCellRenderer(new DateCellRenderer());
        jScrollPane2.setViewportView(TimeTable);

        FileMenu.setText("File");

        closeBellRinger.setText("Close Bell Ringer");
        closeBellRinger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBellRingerActionPerformed(evt);
            }
        });
        FileMenu.add(closeBellRinger);

        ExitMenuItem.setText("Exit Bell Ringer");
        ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitMenuItem);

        MenuBar.add(FileMenu);

        ToolsMenu.setText("Tools");

        ShowInToolbarSubMenu.setText("Show in Toolbar");

        ShowScheduleBell.setText("Schedule Bell");
        ShowScheduleBell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowScheduleBellActionPerformed(evt);
            }
        });
        ShowInToolbarSubMenu.add(ShowScheduleBell);

        ShowFireAlarm.setText("Fire Alarm");
        ShowFireAlarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowFireAlarmActionPerformed(evt);
            }
        });
        ShowInToolbarSubMenu.add(ShowFireAlarm);

        ShowEmergencyAlarm.setText("Emergency Alarm");
        ShowEmergencyAlarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowEmergencyAlarmActionPerformed(evt);
            }
        });
        ShowInToolbarSubMenu.add(ShowEmergencyAlarm);

        ShowAnouncements.setText("Anouncements");
        ShowAnouncements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAnouncementsActionPerformed(evt);
            }
        });
        ShowInToolbarSubMenu.add(ShowAnouncements);

        ToolsMenu.add(ShowInToolbarSubMenu);

        ScheduleBellMenuIteml.setText("Schedule Bell");
        ScheduleBellMenuIteml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleBellMenuItemlActionPerformed(evt);
            }
        });
        ToolsMenu.add(ScheduleBellMenuIteml);

        FireAlarmMenuItem.setText("Fire Alarm");
        FireAlarmMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireAlarmMenuItemActionPerformed(evt);
            }
        });
        ToolsMenu.add(FireAlarmMenuItem);

        EmergencyAlarmMenuItem.setText("Emergency Alarm");
        ToolsMenu.add(EmergencyAlarmMenuItem);

        AnouncementsMenuItem.setText("Anouncements");
        ToolsMenu.add(AnouncementsMenuItem);

        MenuBar.add(ToolsMenu);

        HelpMenu.setText("Help");

        contentMenuItem.setText("Contents");
        HelpMenu.add(contentMenuItem);

        aboutMenuItem.setText("About Bell Scheduler");
        HelpMenu.add(aboutMenuItem);

        MenuBar.add(HelpMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bellTimingLabel)))
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bellTimingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
                
    private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitMenuItemActionPerformed

    private void ShowScheduleBellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowScheduleBellActionPerformed
        // TODO add your handling code here:
        if(ScheduleBell.isVisible() == true)
        {
          ScheduleBell.setVisible(false);  
        }
        else
        {
            ScheduleBell.setVisible(true);
        }
    }//GEN-LAST:event_ShowScheduleBellActionPerformed

    private void ShowFireAlarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowFireAlarmActionPerformed
         // TODO add your handling code here:
        if(FireAlarm.isVisible() == true)
        {
          FireAlarm.setVisible(false);  
        }
        else
        {
            FireAlarm.setVisible(true);
        }       
    }//GEN-LAST:event_ShowFireAlarmActionPerformed

    private void ShowEmergencyAlarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowEmergencyAlarmActionPerformed
        // TODO add your handling code here:
         if(EmergencyAlarm.isVisible() == true)
        {
          EmergencyAlarm.setVisible(false);  
        }
        else
        {
            EmergencyAlarm.setVisible(true);
        }
    }//GEN-LAST:event_ShowEmergencyAlarmActionPerformed

    private void ShowAnouncementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAnouncementsActionPerformed
        // TODO add your handling code here:
        if(Anouncements.isVisible() == true)
        {
          Anouncements.setVisible(false);  
        }
        else
        {
            Anouncements.setVisible(true);
        }
    }//GEN-LAST:event_ShowAnouncementsActionPerformed

    private void FireAlarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireAlarmActionPerformed
        /**
         * Play Fire Alarm Audio
         */
        // Open an input stream  to the audio file.
        if(Play_Sound.IsClipLoaded())
        {
            Play_Sound.Stop();
        }
        
        Play_Sound play = new Play_Sound("ding.wav");
        play.LoadAudio();
        play.PlayAudioOnce();
        play = new Play_Sound("Fire.wav");
        play.LoadAudio();
        play.PlayAudioOnce();
        
            
    }//GEN-LAST:event_FireAlarmActionPerformed

    private void ScheduleBellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleBellActionPerformed
        // Calling form Day_Scheduler
        String[] args = {};
        Day_Scheduler.main(args);
    }//GEN-LAST:event_ScheduleBellActionPerformed

    private void ScheduleBellMenuItemlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleBellMenuItemlActionPerformed
        // calling form Day_Scheduler
        String[] args = {};
        Day_Scheduler.main(args);
    }//GEN-LAST:event_ScheduleBellMenuItemlActionPerformed

    private void FireAlarmMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireAlarmMenuItemActionPerformed
         /**
          * Play Fire Alarm Audio
          */
        // Open an input stream  to the audio file.
        if(Play_Sound.IsClipLoaded())
        {
            Play_Sound.Stop();
        }
        
             Play_Sound play = new Play_Sound("ding.wav");
             play.LoadAudio();
             play.PlayAudioOnce();
             play = new Play_Sound("Fire.wav");
             play.LoadAudio();
             play.PlayAudioOnce();
        
    }//GEN-LAST:event_FireAlarmMenuItemActionPerformed

    private void closeBellRingerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBellRingerActionPerformed
        // TODO add your handling code here:
        this.setState(ICONIFIED);
        
    }//GEN-LAST:event_closeBellRingerActionPerformed

    private void EmergencyAlarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmergencyAlarmActionPerformed
        // TODO add your handling code here:
        if(Play_Sound.IsClipLoaded())
        {
            Play_Sound.Stop();
        }
        
        Play_Sound play = new Play_Sound("emergency.wav");
        play.LoadAudio();
        play.PlayAudioLoop(5);
        
    }//GEN-LAST:event_EmergencyAlarmActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        Play_Sound.Stop();
    }//GEN-LAST:event_stopActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
       if(evt.getNewState()==ICONIFIED){
           setVisible(false);
           }
        if(evt.getNewState()==7)
        {
            setVisible(false);
        }
        if(evt.getNewState()==MAXIMIZED_BOTH)
        {
                    setVisible(true);
                    System.out.println("Tray icon removed");
        }
        if(evt.getNewState()==NORMAL)
        {
            setVisible(true);
            System.out.println("Tray icon removed");
        }
            
        
        
    }//GEN-LAST:event_formWindowStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setState(ICONIFIED);
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        tablechanged();
        TimeTable.setModel(m);
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            public void run() {
               CallStart_Bell();
            }
            private void CallStart_Bell() {
                Start_Bell.ScheduleBell();
            }
        }, 300 , 1000);
    }//GEN-LAST:event_formWindowGainedFocus
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try
                {
                    new Main_Window().setVisible(true);
                }catch(Exception e){e.printStackTrace();}
            }
        });        
        
         ti.LoadTrayIcon();
                     
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Anouncements;
    private javax.swing.JMenuItem AnouncementsMenuItem;
    private javax.swing.JButton EmergencyAlarm;
    private javax.swing.JMenuItem EmergencyAlarmMenuItem;
    private javax.swing.JMenuItem ExitMenuItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JButton FireAlarm;
    private javax.swing.JMenuItem FireAlarmMenuItem;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JButton ScheduleBell;
    private javax.swing.JMenuItem ScheduleBellMenuIteml;
    private javax.swing.JMenuItem ShowAnouncements;
    private javax.swing.JMenuItem ShowEmergencyAlarm;
    private javax.swing.JMenuItem ShowFireAlarm;
    private javax.swing.JMenu ShowInToolbarSubMenu;
    private javax.swing.JMenuItem ShowScheduleBell;
    public javax.swing.JTable TimeTable;
    private javax.swing.JMenu ToolsMenu;
    private javax.swing.JPanel ToolsPanel;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLabel bellTimingLabel;
    private javax.swing.JMenuItem closeBellRinger;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JButton exit;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
    }

